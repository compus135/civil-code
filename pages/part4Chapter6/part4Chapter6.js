Page({
  data: {
    civil: [
      {
        title: "第一千零三十二条",
        content: [
          "自然人享有隐私权。任何组织或者个人不得以刺探、侵扰、泄露、公开等方式侵害他人的隐私权。",
          "隐私是自然人的私人生活安宁和不愿为他人知晓的私密空间、私密活动、私密信息。",
        ],
      },
      {
        title: "第一千零三十三条",
        content: [
          "除法律另有规定或者权利人明确同意外，任何组织或者个人不得实施下列行为：",
          "（一）以电话、短信、即时通讯工具、电子邮件、传单等方式侵扰他人的私人生活安宁；",
          "（二）进入、拍摄、窥视他人的住宅、宾馆房间等私密空间；",
          "（三）拍摄、窥视、窃听、公开他人的私密活动；",
          "（四）拍摄、窥视他人身体的私密部位；",
          "（五）处理他人的私密信息；",
          "（六）以其他方式侵害他人的隐私权。",
        ],
      },
      {
        title: "第一千零三十四条",
        content: [
          "自然人的个人信息受法律保护。",
          "个人信息是以电子或者其他方式记录的能够单独或者与其他信息结合识别特定自然人的各种信息，包括自然人的姓名、出生日期、身份证件号码、生物识别信息、住址、电话号码、电子邮箱、健康信息、行踪信息等。",
          "个人信息中的私密信息，适用有关隐私权的规定；没有规定的，适用有关个人信息保护的规定。",
        ],
      },
      {
        title: "第一千零三十五条",
        content: [
          "处理个人信息的，应当遵循合法、正当、必要原则，不得过度处理，并符合下列条件：",
          "（一）征得该自然人或者其监护人同意，但是法律、行政法规另有规定的除外；",
          "（二）公开处理信息的规则；",
          "（三）明示处理信息的目的、方式和范围；",
          "（四）不违反法律、行政法规的规定和双方的约定。",
          "个人信息的处理包括个人信息的收集、存储、使用、加工、传输、提供、公开等。",
        ],
      },
      {
        title: "第一千零三十六条",
        content: [
          "处理个人信息，有下列情形之一的，行为人不承担民事责任：",
          "（一）在该自然人或者其监护人同意的范围内合理实施的行为；",
          "（二）合理处理该自然人自行公开的或者其他已经合法公开的信息，但是该自然人明确拒绝或者处理该信息侵害其重大利益的除外；",
          "（三）为维护公共利益或者该自然人合法权益，合理实施的其他行为。",
        ],
      },
      {
        title: "第一千零三十七条",
        content: [
          "自然人可以依法向信息处理者查阅或者复制其个人信息；发现信息有错误的，有权提出异议并请求及时采取更正等必要措施。",
          "自然人发现信息处理者违反法律、行政法规的规定或者双方的约定处理其个人信息的，有权请求信息处理者及时删除。",
        ],
      },
      {
        title: "第一千零三十八条",
        content: [
          "信息处理者不得泄露或者篡改其收集、存储的个人信息；未经自然人同意，不得向他人非法提供其个人信息，但是经过加工无法识别特定个人且不能复原的除外。",
          "信息处理者应当采取技术措施和其他必要措施，确保其收集、存储的个人信息安全，防止信息泄露、篡改、丢失；发生或者可能发生个人信息泄露、篡改、丢失的，应当及时采取补救措施，按照规定告知自然人并向有关主管部门报告。",
        ],
      },
      {
        title: "第一千零三十九条",
        content:
          "国家机关、承担行政职能的法定机构及其工作人员对于履行职责过程中知悉的自然人的隐私和个人信息，应当予以保密，不得泄露或者向他人非法提供。",
      },
    ],
  },
  onLoad: function (options) {
    const { partIndex, chapterIndex } = options;
    this.setData({ partIndex, chapterIndex });
  },
});
